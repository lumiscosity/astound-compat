plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://maven.terraformersmc.com/releases/" }
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "maven.modrinth:cloth-config:${project.clothconfig_version}"
	// convenience and minor testing
	modLocalRuntime "com.terraformersmc:modmenu:${modmenu_version}"
	// wilder wild (for (s)hlogs)
	modImplementation "maven.modrinth:wilder-wild:${project.wilderwild_version}"
	modImplementation "maven.modrinth:frozenlib:${project.frozenlib_version}"
	// promenade
	modImplementation "maven.modrinth:promenade:${project.promenade_version}"
	modImplementation "maven.modrinth:dawn:${project.dawnapi_version}"
	modImplementation "maven.modrinth:biolith:${project.biolith_version}"
	modImplementation "com.terraformersmc.terraform-api:terraform-surfaces-api-v1:${project.terraform_surfaces_api_version}"
	modImplementation "com.terraformersmc.terraform-api:terraform-shapes-api-v1:${terraform_shapes_version}"
	modImplementation "com.terraformersmc.terraform-api:terraform-wood-api-v1:${terraform_wood_version}"
	// terrablender
	modImplementation "maven.modrinth:terrablender:${terrablender_version}"
	implementation "com.electronwill.night-config:toml:${nightconfig_version}"
	implementation "com.electronwill.night-config:core:${nightconfig_version}"
	// biome makeover (CLONE GIT REPO & OPEN PROJECT FOR THIS TO WORK)
	//modImplementation(project(":biomemakeover",))
	// all other mods
	modImplementation "maven.modrinth:great-big-world:NIAb0XO6"
	modImplementation "maven.modrinth:creo-lib:V8ENaaAV"
	//modImplementation "maven.modrinth:biome-makeover:rsoZ2Iqo"
	modImplementation "maven.modrinth:architectury-api:Sbew3kXe"
	modImplementation "maven.modrinth:cinderscapes:2mBOodyG"
	modImplementation "maven.modrinth:gardens-of-the-dead:dwXQdKI3"
	modImplementation "maven.modrinth:pearfection:KHR0uBvn"
	modImplementation "maven.modrinth:hellions-sniffer+:DLjYM0KE"
	modImplementation "maven.modrinth:traverse:9o4IEnHZ"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
